'''Autogenerated by xml_generate script, do not edit!'''
from OpenGL import platform as _p, arrays
# Code generation uses this
from OpenGL.raw.GL import _types as _cs
# End users want this...
from OpenGL.raw.GL._types import *
from OpenGL.raw.GL import _errors
from OpenGL.constant import Constant as _C

import ctypes
_EXTENSION_NAME = 'GL_VERSION_GL_4_6'
def _f( function ):
    return _p.createFunction( function,_p.PLATFORM.GL,'GL_VERSION_GL_4_6',error_checker=_errors._error_checker)
GL_CLIPPING_INPUT_PRIMITIVES=_C('GL_CLIPPING_INPUT_PRIMITIVES',0x82F6)
GL_CLIPPING_OUTPUT_PRIMITIVES=_C('GL_CLIPPING_OUTPUT_PRIMITIVES',0x82F7)
GL_COMPUTE_SHADER_INVOCATIONS=_C('GL_COMPUTE_SHADER_INVOCATIONS',0x82F5)
GL_CONTEXT_FLAG_NO_ERROR_BIT=_C('GL_CONTEXT_FLAG_NO_ERROR_BIT',0x00000008)
GL_CONTEXT_RELEASE_BEHAVIOR=_C('GL_CONTEXT_RELEASE_BEHAVIOR',0x82FB)
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH=_C('GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH',0x82FC)
GL_FRAGMENT_SHADER_INVOCATIONS=_C('GL_FRAGMENT_SHADER_INVOCATIONS',0x82F4)
GL_GEOMETRY_SHADER_INVOCATIONS=_C('GL_GEOMETRY_SHADER_INVOCATIONS',0x887F)
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED=_C('GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED',0x82F3)
GL_MAX_TEXTURE_MAX_ANISOTROPY=_C('GL_MAX_TEXTURE_MAX_ANISOTROPY',0x84FF)
GL_NONE=_C('GL_NONE',0)
GL_NUM_SPIR_V_EXTENSIONS=_C('GL_NUM_SPIR_V_EXTENSIONS',0x9554)
GL_PARAMETER_BUFFER=_C('GL_PARAMETER_BUFFER',0x80EE)
GL_PARAMETER_BUFFER_BINDING=_C('GL_PARAMETER_BUFFER_BINDING',0x80EF)
GL_POLYGON_OFFSET_CLAMP=_C('GL_POLYGON_OFFSET_CLAMP',0x8E1B)
GL_PRIMITIVES_SUBMITTED=_C('GL_PRIMITIVES_SUBMITTED',0x82EF)
GL_SHADER_BINARY_FORMAT_SPIR_V=_C('GL_SHADER_BINARY_FORMAT_SPIR_V',0x9551)
GL_SPIR_V_BINARY=_C('GL_SPIR_V_BINARY',0x9552)
GL_SPIR_V_EXTENSIONS=_C('GL_SPIR_V_EXTENSIONS',0x9553)
GL_TESS_CONTROL_SHADER_PATCHES=_C('GL_TESS_CONTROL_SHADER_PATCHES',0x82F1)
GL_TESS_EVALUATION_SHADER_INVOCATIONS=_C('GL_TESS_EVALUATION_SHADER_INVOCATIONS',0x82F2)
GL_TEXTURE_MAX_ANISOTROPY=_C('GL_TEXTURE_MAX_ANISOTROPY',0x84FE)
GL_TRANSFORM_FEEDBACK_OVERFLOW=_C('GL_TRANSFORM_FEEDBACK_OVERFLOW',0x82EC)
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW=_C('GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW',0x82ED)
GL_VERTEX_SHADER_INVOCATIONS=_C('GL_VERTEX_SHADER_INVOCATIONS',0x82F0)
GL_VERTICES_SUBMITTED=_C('GL_VERTICES_SUBMITTED',0x82EE)
@_f
@_p.types(None,_cs.GLenum,ctypes.c_void_p,_cs.GLintptr,_cs.GLsizei,_cs.GLsizei)
def glMultiDrawArraysIndirectCount(mode,indirect,drawcount,maxdrawcount,stride):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,ctypes.c_void_p,_cs.GLintptr,_cs.GLsizei,_cs.GLsizei)
def glMultiDrawElementsIndirectCount(mode,type,indirect,drawcount,maxdrawcount,stride):pass
@_f
@_p.types(None,_cs.GLfloat,_cs.GLfloat,_cs.GLfloat)
def glPolygonOffsetClamp(factor,units,clamp):pass
@_f
@_p.types(None,_cs.GLuint,arrays.GLcharArray,_cs.GLuint,arrays.GLuintArray,arrays.GLuintArray)
def glSpecializeShader(shader,pEntryPoint,numSpecializationConstants,pConstantIndex,pConstantValue):pass
